PERIOD: '.';
SEPARATOR: ',';
COLON: ':';
DOLLAR: '$';
HASH: '#';
AT: '@';
OPEN: '(';
CLOSE: ')';
STRING: /"[^"]*"|'[^']*'/;
INTEGER: /[1-9]\d*/;
IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]*/;
DO: 'do';
DONE: 'done';

SECTIONS: SECTION+; // This is the root element of the script

SECTION: BUTTON | INSTALL | DEFINITION | CAROUSEL | FLOW;

MEMBER: PERIOD IDENTIFIER;
OBJECT: IDENTIFIER MEMBER*;

VARIABLE: DOLLAR OBJECT;
INTENT: HASH OBJECT;
ENTITY: AT OBJECT;

CONSTANT: 'empty' | 'null' | 'nil';

OPERATOR: 'is' | 'is not' | 'equal' | 'not equal' | 'has entity';
E: STRING | INTEGER | VARIABLE | INTENT | ENTITY | CONSTANT | IDENTIFIER;

EXPRESSION: E | E OPERATOR E;

INSTALL: 'install' IDENTIFIER 'using' STRING;

EXAMPLE_LIST: STRING*[SEPARATOR];
EXAMPLE_FILE: 'using' STRING;
EXAMPLES: EXAMPLE_LIST | EXAMPLE_FILE;

ELEMENT: 'intent' | 'entity';

FALLBACK: 'fallback' STRING;

DEFINITION: 'define' ELEMENT IDENTIFIER EXAMPLES;

/* Button definition to open a URL */
URL_BUTTON: 'url' OPEN STRING SEPARATOR STRING CLOSE;

/* Button definition to put text back to the conversation */
POSTBACK_ATTRIBUTE: IDENTIFIER COLON STRING;
POSTBACK_BUTTON: 'postback' OPEN STRING SEPARATOR POSTBACK_ATTRIBUTE+[SEPARATOR] CLOSE;

/* Carousel buttons */
BUTTON: URL_BUTTON | POSTBACK_BUTTON;
BUTTON_DEFINITION: 'button' BUTTON;


/* Carousel cards */
ATTRIBUTE: 'set' IDENTIFIER EXPRESSION;
CARD_BODY: ATTRIBUTE+[SEPARATOR] BUTTON_DEFINITION*[SEPARATOR];
CARD: 'card' COLON CARD_BODY;

CAROUSEL_BODY: CARD_BODY  // For dynamic carousels
             | CARD+;     // For static carousels

CAROUSEL: 'carousel' IDENTIFIER COLON CAROUSEL_BODY 'end';


SET_ENTITY: 'as' ENTITY;
REPLY: 'reply' STRING SET_ENTITY?;
REPLIES: REPLY+[SEPARATOR] FALLBACK?;
QUICK_REPLIES: 'with' COLON REPLIES;

BOT_ASKS: 'ask' STRING+ 'as' OBJECT QUICK_REPLIES?;
BOT_SAYS: 'say' STRING+;
BOT_WAITS: 'wait' IDENTIFIER;


/* Experimental, not implemented */
PAGER: 'take' 'next'? INTEGER 'items' 'from' EXPRESSION 'as' IDENTIFIER;

PARAMETERS: OPEN EXPRESSION*[SEPARATOR] CLOSE;

CAROUSEL_CONTENT_SOURCE: 'using' EXPRESSION;
SEND_CAROUSEL: 'show' IDENTIFIER CAROUSEL_CONTENT_SOURCE?;
FLOW_PARAMETER: 'with' 'parameter' EXPRESSION;
CHANGE_FLOW: 'change' 'flow' IDENTIFIER FLOW_PARAMETER?;
CALL_FUNCTION: 'call' IDENTIFIER PERIOD IDENTIFIER PARAMETERS?;

EQUALS: VARIABLE 'equal' EXPRESSION;
HAS_ENTITY: VARIABLE 'has' 'entity' ENTITY;
IS_NOT_EMPTY: VARIABLE 'is' 'not'? 'empty';

CONDITION: EQUALS
         | HAS_ENTITY
         | IS_NOT_EMPTY;

ACTION: BOT_ASKS
      | BOT_SAYS
      | BOT_WAITS
      | CALL_FUNCTION
      | CHANGE_FLOW
      | SEND_CAROUSEL;

WHEN: 'when' EXPRESSION COLON ACTION;
IF: 'if' CONDITION COLON ACTION;

STATEMENT: ACTION | IF | WHEN ;

BLOCK: DO STATEMENT+ DONE;

FLOW_INTENT: 'given' INTENT;
FLOW: 'flow' IDENTIFIER FLOW_INTENT? BLOCK;
